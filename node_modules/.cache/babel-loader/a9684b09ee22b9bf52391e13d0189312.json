{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documentos\\\\ort1\\\\src\\\\jsx\\\\pages\\\\Registration.js\",\n    _s = $RefreshSig$();\n\n/*\r\nimport React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect, useDispatch } from 'react-redux';\r\n//import logo from '../../images/logo-full.png'\r\nimport {\r\n    loadingToggleAction,\r\n    signupAction,\r\n} from '../../store/actions/AuthActions';\r\nfunction Register(props) {\r\n    const [email, setEmail] = useState('');\r\n    let errorsObj = { email: '', password: '' };\r\n    const [errors, setErrors] = useState(errorsObj);\r\n    const [password, setPassword] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    function onSignUp(e) {\r\n        e.preventDefault();\r\n        let error = false;\r\n        const errorObj = { ...errorsObj };\r\n        if (email === '') {\r\n            errorObj.email = 'Email is Required';\r\n            error = true;\r\n        }\r\n\r\n        if (password === '') {\r\n            errorObj.password = 'Password is Required';\r\n            error = true;\r\n        }\r\n\r\n        setErrors(errorObj);\r\n\r\n        if (error) return;\r\n        dispatch(loadingToggleAction(true));\r\n\r\n        dispatch(signupAction(email, password, props.history));\r\n    }\r\n  return (\r\n    <div className='authincation h-100 p-meddle'>\r\n        <div className='container h-100'>\r\n            <div className='row justify-content-center h-100 align-items-center'>\r\n                <div className='col-md-6'>\r\n                    <div className='authincation-content'>\r\n                        <div className='row no-gutters'>\r\n                            <div className='col-xl-12'>\r\n                                <div className='auth-form'>\r\n                                    {/* <div className='text-center mb-3'>\r\n                                        <img src={logo} alt=\"\" />\r\n                                    </div> */\n\n/*\r\n<h4 className='text-center mb-4 '>Sign up your account</h4>\r\n{props.errorMessage && (\r\n<div className='bg-red-300 text-danger border border-red-900 p-1 my-2'>\r\n{props.errorMessage}\r\n</div>\r\n)}\r\n{props.successMessage && (\r\n<div className='bg-green-300 text-danger text-green-900  p-1 my-2'>\r\n{props.successMessage}\r\n</div>\r\n)}\r\n<form onSubmit={onSignUp}>\r\n<div className='form-group'>\r\n<label className='mb-1 '>\r\n <strong>Username</strong>\r\n</label>\r\n<input type='text' className='form-control' placeholder='username'name='name' />\r\n</div>\r\n<div className='form-group'>\r\n<label className='mb-1 '>\r\n <strong>Email</strong>\r\n</label>\r\n<input type=\"email\" className=\"form-control\"\r\n   value={email}\r\n   onChange={(e) => setEmail(e.target.value)}\r\n/>\r\n{errors.email && <div className=\"text-danger fs-12\">{errors.email}</div>}\r\n</div>\r\n<div className='form-group'>\r\n<label className='mb-1 '>\r\n <strong>Password</strong>\r\n</label>\r\n<input type=\"password\" className=\"form-control\"\r\n   value={password}\r\n   onChange={(e) =>\r\n       setPassword(e.target.value)\r\n   }\r\n/>\r\n</div>\r\n{errors.password && <div className=\"text-danger fs-12\">{errors.password}</div>}\r\n<div className='text-center mt-4'>\r\n<input type='submit' className='btn btn-primary btn-block'/>\r\n</div>\r\n</form>\r\n<div className='new-account mt-3 '>\r\n<p>\r\nAlready have an account?{' '}\r\n<Link className='text-primary' to='/login'>\r\n   Sign in\r\n</Link>\r\n</p>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n)\r\n}\r\nconst mapStateToProps = (state) => {\r\nreturn {\r\nerrorMessage: state.auth.errorMessage,\r\nsuccessMessage: state.auth.successMessage,\r\nshowLoading: state.auth.showLoading,\r\n};\r\n};\r\nexport default connect(mapStateToProps)(Register); */\nimport { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Registration() {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    fetch('/api/reset-password', {\n      method: 'POST',\n      body: JSON.stringify({\n        email,\n        password,\n        confirmPassword\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => setMessage(data.message)).catch(error => setMessage('An error occurred while resetting your password.'));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formBasicEmail\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"email\",\n        placeholder: \"Enter email\",\n        value: email,\n        onChange: event => setEmail(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formBasicPassword\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Nueva Contrase\\xF1a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        placeholder: \"New Password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formBasicConfirmPassword\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Confirma la Nueva Contrase\\xF1a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        placeholder: \"Confirm New Password\",\n        value: confirmPassword,\n        onChange: event => setConfirmPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      children: \"Aceptar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Registration, \"OBp6Cm7u2KJRMt53uOEiBVbAuB4=\");\n\n_c = Registration;\nexport default Registration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"sources":["D:/Documentos/ort1/src/jsx/pages/Registration.js"],"names":["useState","Form","Button","Registration","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","handleSubmit","event","preventDefault","fetch","method","body","JSON","stringify","headers","then","response","json","data","catch","error","target","value"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;;AAEA,WAASY,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AAEAC,IAAAA,KAAK,CAAC,qBAAD,EAAwB;AAC3BC,MAAAA,MAAM,EAAE,MADmB;AAE3BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEf,QAAAA,KAAF;AAASE,QAAAA,QAAT;AAAmBE,QAAAA;AAAnB,OAAf,CAFqB;AAG3BY,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHkB,KAAxB,CAAL,CAOGC,IAPH,CAOQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPpB,EAQGF,IARH,CAQQG,IAAI,IAAIb,UAAU,CAACa,IAAI,CAACd,OAAN,CAR1B,EASGe,KATH,CASSC,KAAK,IAAIf,UAAU,CAAC,kDAAD,CAT5B;AAUD;;AAED,sBAGE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEC,YAAhB;AAAA,4BACE,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,gBAAtB;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,WAAW,EAAC,aAFd;AAGE,QAAA,KAAK,EAAER,KAHT;AAIE,QAAA,QAAQ,EAAES,KAAK,IAAIR,QAAQ,CAACQ,KAAK,CAACc,MAAN,CAAaC,KAAd;AAJ7B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,mBAAtB;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,WAAW,EAAC,cAFd;AAGE,QAAA,KAAK,EAAEtB,QAHT;AAIE,QAAA,QAAQ,EAAEO,KAAK,IAAIN,WAAW,CAACM,KAAK,CAACc,MAAN,CAAaC,KAAd;AAJhC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAmBE,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,0BAAtB;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,WAAW,EAAC,sBAFd;AAGE,QAAA,KAAK,EAAEpB,eAHT;AAIE,QAAA,QAAQ,EAAEK,KAAK,IAAIJ,kBAAkB,CAACI,KAAK,CAACc,MAAN,CAAaC,KAAd;AAJvC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF,eA4BE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA5BF,EA+BGlB,OAAO,iBAAI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBAAuBA;AAAvB;AAAA;AAAA;AAAA;AAAA,YA/Bd;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AAqCD;;GA1DQP,Y;;KAAAA,Y;AA4DT,eAAeA,YAAf","sourcesContent":["/*\r\nimport React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect, useDispatch } from 'react-redux';\r\n//import logo from '../../images/logo-full.png'\r\nimport {\r\n    loadingToggleAction,\r\n    signupAction,\r\n} from '../../store/actions/AuthActions';\r\nfunction Register(props) {\r\n    const [email, setEmail] = useState('');\r\n    let errorsObj = { email: '', password: '' };\r\n    const [errors, setErrors] = useState(errorsObj);\r\n    const [password, setPassword] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    function onSignUp(e) {\r\n        e.preventDefault();\r\n        let error = false;\r\n        const errorObj = { ...errorsObj };\r\n        if (email === '') {\r\n            errorObj.email = 'Email is Required';\r\n            error = true;\r\n        }\r\n\r\n        if (password === '') {\r\n            errorObj.password = 'Password is Required';\r\n            error = true;\r\n        }\r\n\r\n        setErrors(errorObj);\r\n\r\n        if (error) return;\r\n        dispatch(loadingToggleAction(true));\r\n\r\n        dispatch(signupAction(email, password, props.history));\r\n    }\r\n  return (\r\n    <div className='authincation h-100 p-meddle'>\r\n        <div className='container h-100'>\r\n            <div className='row justify-content-center h-100 align-items-center'>\r\n                <div className='col-md-6'>\r\n                    <div className='authincation-content'>\r\n                        <div className='row no-gutters'>\r\n                            <div className='col-xl-12'>\r\n                                <div className='auth-form'>\r\n                                    {/* <div className='text-center mb-3'>\r\n                                        <img src={logo} alt=\"\" />\r\n                                    </div> *//*\r\n\r\n                                    <h4 className='text-center mb-4 '>Sign up your account</h4>\r\n                                    {props.errorMessage && (\r\n                                        <div className='bg-red-300 text-danger border border-red-900 p-1 my-2'>\r\n                                            {props.errorMessage}\r\n                                        </div>\r\n                                    )}\r\n                                    {props.successMessage && (\r\n                                        <div className='bg-green-300 text-danger text-green-900  p-1 my-2'>\r\n                                            {props.successMessage}\r\n                                        </div>\r\n                                    )}\r\n                                    <form onSubmit={onSignUp}>\r\n                                        <div className='form-group'>\r\n                                            <label className='mb-1 '>\r\n                                              <strong>Username</strong>\r\n                                            </label>\r\n                                            <input type='text' className='form-control' placeholder='username'name='name' />\r\n                                        </div>\r\n                                        <div className='form-group'>\r\n                                            <label className='mb-1 '>\r\n                                              <strong>Email</strong>\r\n                                            </label>\r\n                                            <input type=\"email\" className=\"form-control\"\r\n                                                value={email}\r\n                                                onChange={(e) => setEmail(e.target.value)}\r\n                                            />\r\n                                            {errors.email && <div className=\"text-danger fs-12\">{errors.email}</div>}\r\n                                        </div>\r\n                                        <div className='form-group'>\r\n                                            <label className='mb-1 '>\r\n                                              <strong>Password</strong>\r\n                                            </label>\r\n                                            <input type=\"password\" className=\"form-control\"\r\n                                                value={password}\r\n                                                onChange={(e) =>\r\n                                                    setPassword(e.target.value)\r\n                                                }\r\n                                            />\r\n                                        </div>\r\n                                        {errors.password && <div className=\"text-danger fs-12\">{errors.password}</div>}\r\n                                        <div className='text-center mt-4'>\r\n                                            <input type='submit' className='btn btn-primary btn-block'/>\r\n                                        </div>\r\n                                    </form>\r\n                                    <div className='new-account mt-3 '>\r\n                                        <p>\r\n                                            Already have an account?{' '}\r\n                                            <Link className='text-primary' to='/login'>\r\n                                                Sign in\r\n                                            </Link>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        errorMessage: state.auth.errorMessage,\r\n        successMessage: state.auth.successMessage,\r\n        showLoading: state.auth.showLoading,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Register); */\r\n\r\nimport { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nfunction Registration() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    fetch('/api/reset-password', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ email, password, confirmPassword }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => setMessage(data.message))\r\n      .catch(error => setMessage('An error occurred while resetting your password.'));\r\n  }\r\n\r\n  return (\r\n\r\n    \r\n    <Form onSubmit={handleSubmit}>\r\n      <Form.Group controlId=\"formBasicEmail\">\r\n        <Form.Label>Email</Form.Label>\r\n        <Form.Control\r\n          type=\"email\"\r\n          placeholder=\"Enter email\"\r\n          value={email}\r\n          onChange={event => setEmail(event.target.value)}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formBasicPassword\">\r\n        <Form.Label>Nueva Contraseña</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          placeholder=\"New Password\"\r\n          value={password}\r\n          onChange={event => setPassword(event.target.value)}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formBasicConfirmPassword\">\r\n        <Form.Label>Confirma la Nueva Contraseña</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          placeholder=\"Confirm New Password\"\r\n          value={confirmPassword}\r\n          onChange={event => setConfirmPassword(event.target.value)}\r\n        />\r\n      </Form.Group>\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        Aceptar\r\n      </Button>\r\n      {message && <div className=\"mt-3\">{message}</div>}\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default Registration"]},"metadata":{},"sourceType":"module"}