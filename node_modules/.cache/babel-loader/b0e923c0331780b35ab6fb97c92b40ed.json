{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documentos\\\\ort1\\\\src\\\\jsx\\\\pages\\\\ForgotPassword.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport loginbg from \"../../images/bg-login.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ForgotPassword() {\n  _s();\n\n  function validateForm() {\n    return currentPassword.length >= 6 && password.length >= 6 && password === confirmPassword;\n  }\n\n  const [email, setEmail] = useState('');\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    fetch('/api/reset-password', {\n      method: 'POST',\n      body: JSON.stringify({\n        email,\n        currentPassword,\n        password,\n        confirmPassword\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => setMessage(data.message)).catch(error => setMessage('An error occurred while resetting your password.'));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-main-page\",\n    style: {\n      backgroundImage: \"url(\" + loginbg + \")\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container bg-success mt-5 p-5 \",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            value: email,\n            onChange: event => setEmail(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicCurrentPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"text-white\",\n            children: \"Contrase\\xF1a Actual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: currentPassword,\n            onChange: event => setCurrentPassword(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Nueva Contrase\\xF1a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: password,\n            onChange: event => setPassword(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicConfirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirma la Nueva Contrase\\xF1a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: confirmPassword,\n            onChange: event => setConfirmPassword(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          disabled: !validateForm(false),\n          children: \"Aceptar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }, this), \"  \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 1\n  }, this);\n}\n\n_s(ForgotPassword, \"9S9X1v5G9Oe535wlRkxKD9xBds0=\");\n\n_c = ForgotPassword;\nexport default ForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["D:/Documentos/ort1/src/jsx/pages/ForgotPassword.js"],"names":["useState","Form","Button","loginbg","ForgotPassword","validateForm","currentPassword","length","password","confirmPassword","email","setEmail","setCurrentPassword","setPassword","setConfirmPassword","message","setMessage","handleSubmit","event","preventDefault","fetch","method","body","JSON","stringify","headers","then","response","json","data","catch","error","backgroundImage","target","value"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport loginbg from \"../../images/bg-login.jpg\";\r\n\r\n\r\nfunction ForgotPassword() {\r\n\r\n\r\n    function validateForm() {\r\n        return currentPassword.length >= 6 && password.length >= 6 && password === confirmPassword;\r\n      }\r\n\r\n\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [currentPassword, setCurrentPassword] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    fetch('/api/reset-password', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ email, currentPassword, password, confirmPassword }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => setMessage(data.message))\r\n      .catch(error => setMessage('An error occurred while resetting your password.'));\r\n  }\r\n\r\n  return (\r\n<div className='login-main-page' style={{backgroundImage:\"url(\"+ loginbg +\")\"}}>\r\n  <div className='container bg-success mt-5 p-5 '  >\r\n    <Form onSubmit={handleSubmit}>\r\n      <Form.Group controlId=\"formBasicEmail\">\r\n        <Form.Label>Email</Form.Label>\r\n        <Form.Control\r\n          type=\"email\"\r\n          \r\n          value={email}\r\n          onChange={event => setEmail(event.target.value)}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formBasicCurrentPassword\">\r\n        <Form.Label className='text-white'>Contraseña Actual</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          \r\n          value={currentPassword}\r\n          onChange={event => setCurrentPassword(event.target.value)}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formBasicPassword\">\r\n        <Form.Label>Nueva Contraseña</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          \r\n          value={password}\r\n          onChange={event => setPassword(event.target.value)}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formBasicConfirmPassword\">\r\n        <Form.Label>Confirma la Nueva Contraseña</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          value={confirmPassword}\r\n          onChange={event => setConfirmPassword(event.target.value)}\r\n        />\r\n      </Form.Group>\r\n      <Button variant=\"primary\" type=\"submit\" disabled={!validateForm(false)}>\r\n        Aceptar\r\n      </Button >\r\n      {message && <div className=\"mt-3\">{message}</div>}\r\n    </Form></div>  </div>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword"]},"metadata":{},"sourceType":"module"}