{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documentos\\\\ort1\\\\src\\\\jsx\\\\pages\\\\OlvideContrasena.js\";\nimport React, { Component } from 'react';\nimport { Formik } from 'formik';\nimport { object, ref, string } from 'yup';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Spinner from './Spinner';\nimport Alert from './Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class OlvideContrasena extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      passChangeSuccess: false\n    };\n\n    this._handleModalClose = () => {\n      this.setState(() => ({\n        passChangeSuccess: false\n      }));\n    };\n\n    this._renderModal = () => {\n      const onClick = () => {\n        this.setState(() => ({\n          passChangeSuccess: false\n        }));\n      };\n\n      return /*#__PURE__*/_jsxDEV(Alert, {\n        isOpen: this.state.passChangeSuccess,\n        onClose: this._handleClose,\n        handleSubmit: onClick,\n        title: \"Password Reset\",\n        text: \"Your password was changed successfully\",\n        submitButtonText: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this);\n    };\n\n    this._handleSubmit = ({\n      currentPass,\n      newPass,\n      confirmPass,\n      setSubmitting,\n      resetForm\n    }) => {\n      // fake async login\n      setTimeout(async () => {\n        setSubmitting(false);\n        this.setState(() => ({\n          passChangeSuccess: true\n        }));\n        resetForm();\n      }, 1000);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        currentPass: '',\n        newPass: '',\n        confirmPass: ''\n      },\n      validationSchema: object().shape({\n        currentPass: string().required('Current password is required'),\n        newPass: string().required('New password is required'),\n        confirmPass: string().oneOf([ref('newPass')], 'Passwords do not match').required('Password is required')\n      }),\n      onSubmit: ({\n        currentPass,\n        newPass,\n        confirmPass\n      }, {\n        setSubmitting,\n        resetForm\n      }) => this._handleSubmit({\n        currentPass,\n        newPass,\n        confirmPass,\n        setSubmitting,\n        resetForm\n      }),\n      render: props => {\n        const {\n          values,\n          touched,\n          errors,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isValid,\n          isSubmitting\n        } = props;\n        return isSubmitting ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n          className: \"form form--wrapper\",\n          elevation: 10,\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              margin: \"dense\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"password-current\",\n                error: Boolean(touched.currentPass && errors.currentPass),\n                children: 'Current Password'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"password-current\",\n                name: \"currentPass\",\n                type: \"password\",\n                value: values.currentPass,\n                onChange: handleChange,\n                onBlur: handleBlur,\n                error: Boolean(touched.currentPass && errors.currentPass)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                error: Boolean(touched.currentPass && errors.currentPass),\n                children: touched.currentPass && errors.currentPass ? errors.currentPass : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              margin: \"dense\",\n              error: Boolean(touched.newPass && errors.newPass),\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"password-new\",\n                error: Boolean(touched.newPass && errors.newPass),\n                children: 'New Password'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"password-new\",\n                name: \"newPass\",\n                type: \"password\",\n                value: values.newPass,\n                onChange: handleChange,\n                onBlur: handleBlur,\n                error: Boolean(touched.newPass && errors.newPass)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                error: Boolean(touched.newPass && errors.newPass),\n                children: touched.newPass && errors.newPass ? errors.newPass : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              margin: \"dense\",\n              error: Boolean(touched.confirmPass && errors.confirmPass),\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"password-confirm\",\n                error: Boolean(touched.confirmPass && errors.confirmPass),\n                children: 'Confirm Password'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"password-confirm\",\n                name: \"confirmPass\",\n                type: \"password\",\n                value: values.confirmPass,\n                onChange: handleChange,\n                onBlur: handleBlur,\n                error: Boolean(touched.confirmPass && errors.confirmPass)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                error: Boolean(touched.confirmPass && errors.confirmPass),\n                children: touched.confirmPass && errors.confirmPass ? errors.confirmPass : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"raised\",\n              color: \"primary\",\n              disabled: Boolean(!isValid || isSubmitting),\n              style: {\n                margin: '16px'\n              },\n              children: 'Reset Password'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), this._renderModal()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/Documentos/ort1/src/jsx/pages/OlvideContrasena.js"],"names":["React","Component","Formik","object","ref","string","Input","InputLabel","FormControl","FormHelperText","Button","Paper","Spinner","Alert","OlvideContrasena","state","passChangeSuccess","_handleModalClose","setState","_renderModal","onClick","_handleClose","_handleSubmit","currentPass","newPass","confirmPass","setSubmitting","resetForm","setTimeout","render","shape","required","oneOf","props","values","touched","errors","handleChange","handleBlur","handleSubmit","isValid","isSubmitting","Boolean","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Formik } from 'formik'\r\nimport { object, ref, string } from 'yup'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Button from '@material-ui/core/Button'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nimport Spinner from './Spinner'\r\nimport Alert from './Alert'\r\n\r\nexport default class OlvideContrasena extends Component {\r\n  state = {\r\n    passChangeSuccess: false,\r\n  }\r\n\r\n  _handleModalClose = () => {\r\n    this.setState(() => ({\r\n      passChangeSuccess: false,\r\n    }))\r\n  }\r\n\r\n  _renderModal = () => {\r\n    const onClick = () => {\r\n      this.setState(() => ({ passChangeSuccess: false }))\r\n    }\r\n\r\n    return (\r\n      <Alert\r\n        isOpen={this.state.passChangeSuccess}\r\n        onClose={this._handleClose}\r\n        handleSubmit={onClick}\r\n        title=\"Password Reset\"\r\n        text=\"Your password was changed successfully\"\r\n        submitButtonText=\"Done\"\r\n      />\r\n    )\r\n  }\r\n\r\n  _handleSubmit = ({\r\n    currentPass,\r\n    newPass,\r\n    confirmPass,\r\n    setSubmitting,\r\n    resetForm,\r\n  }) => {\r\n    // fake async login\r\n    setTimeout(async () => {\r\n      setSubmitting(false)\r\n\r\n      this.setState(() => ({\r\n        passChangeSuccess: true,\r\n      }))\r\n\r\n      resetForm()\r\n    }, 1000)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          currentPass: '',\r\n          newPass: '',\r\n          confirmPass: '',\r\n        }}\r\n        validationSchema={object().shape({\r\n          currentPass: string().required('Current password is required'),\r\n          newPass: string().required('New password is required'),\r\n          confirmPass: string()\r\n            .oneOf([ref('newPass')], 'Passwords do not match')\r\n            .required('Password is required'),\r\n        })}\r\n        onSubmit={(\r\n          { currentPass, newPass, confirmPass },\r\n          { setSubmitting, resetForm }\r\n        ) =>\r\n          this._handleSubmit({\r\n            currentPass,\r\n            newPass,\r\n            confirmPass,\r\n            setSubmitting,\r\n            resetForm,\r\n          })\r\n        }\r\n        render={props => {\r\n          const {\r\n            values,\r\n            touched,\r\n            errors,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isValid,\r\n            isSubmitting,\r\n          } = props\r\n          return isSubmitting ? (\r\n            <Spinner />\r\n          ) : (\r\n            <Paper className=\"form form--wrapper\" elevation={10}>\r\n              <form className=\"form\" onSubmit={handleSubmit}>\r\n                <FormControl fullWidth margin=\"dense\">\r\n                  <InputLabel\r\n                    htmlFor=\"password-current\"\r\n                    error={Boolean(touched.currentPass && errors.currentPass)}\r\n                  >\r\n                    {'Current Password'}\r\n                  </InputLabel>\r\n                  <Input\r\n                    id=\"password-current\"\r\n                    name=\"currentPass\"\r\n                    type=\"password\"\r\n                    value={values.currentPass}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(touched.currentPass && errors.currentPass)}\r\n                  />\r\n                  <FormHelperText\r\n                    error={Boolean(touched.currentPass && errors.currentPass)}\r\n                  >\r\n                    {touched.currentPass && errors.currentPass\r\n                      ? errors.currentPass\r\n                      : ''}\r\n                  </FormHelperText>\r\n                </FormControl>\r\n                <FormControl\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  error={Boolean(touched.newPass && errors.newPass)}\r\n                >\r\n                  <InputLabel\r\n                    htmlFor=\"password-new\"\r\n                    error={Boolean(touched.newPass && errors.newPass)}\r\n                  >\r\n                    {'New Password'}\r\n                  </InputLabel>\r\n                  <Input\r\n                    id=\"password-new\"\r\n                    name=\"newPass\"\r\n                    type=\"password\"\r\n                    value={values.newPass}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(touched.newPass && errors.newPass)}\r\n                  />\r\n                  <FormHelperText\r\n                    error={Boolean(touched.newPass && errors.newPass)}\r\n                  >\r\n                    {touched.newPass && errors.newPass ? errors.newPass : ''}\r\n                  </FormHelperText>\r\n                </FormControl>\r\n                <FormControl\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  error={Boolean(touched.confirmPass && errors.confirmPass)}\r\n                >\r\n                  <InputLabel\r\n                    htmlFor=\"password-confirm\"\r\n                    error={Boolean(touched.confirmPass && errors.confirmPass)}\r\n                  >\r\n                    {'Confirm Password'}\r\n                  </InputLabel>\r\n                  <Input\r\n                    id=\"password-confirm\"\r\n                    name=\"confirmPass\"\r\n                    type=\"password\"\r\n                    value={values.confirmPass}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(touched.confirmPass && errors.confirmPass)}\r\n                  />\r\n                  <FormHelperText\r\n                    error={Boolean(touched.confirmPass && errors.confirmPass)}\r\n                  >\r\n                    {touched.confirmPass && errors.confirmPass\r\n                      ? errors.confirmPass\r\n                      : ''}\r\n                  </FormHelperText>\r\n                </FormControl>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"raised\"\r\n                  color=\"primary\"\r\n                  disabled={Boolean(!isValid || isSubmitting)}\r\n                  style={{ margin: '16px' }}\r\n                >\r\n                  {'Reset Password'}\r\n                </Button>\r\n              </form>\r\n              {this._renderModal()}\r\n            </Paper>\r\n          )\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}